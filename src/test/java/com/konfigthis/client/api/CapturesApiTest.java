/*
 * Payments
 * Call the Payments API to authorize payments, capture authorized payments, refund payments that have already been captured, and show payment information. Use the Payments API in conjunction with the <a href=\"/docs/api/orders/v2/\">Orders API</a>. For more information, see the <a href=\"/docs/checkout/\">PayPal Checkout Overview</a>.
 *
 * The version of the OpenAPI document: 2.5
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Capture2;
import com.konfigthis.client.model.Money;
import com.konfigthis.client.model.PaymentInstruction2;
import com.konfigthis.client.model.Refund;
import com.konfigthis.client.model.RefundRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CapturesApi
 */
@Disabled
public class CapturesApiTest {

    private static CapturesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CapturesApi(apiClient);
    }

    /**
     * Refund captured payment
     *
     * Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an &lt;code&gt;amount&lt;/code&gt; object in the JSON request body.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void refundPaymentTest() throws ApiException {
        String captureId = null;
        Money amount = null;
        String customId = null;
        String invoiceId = null;
        String noteToPayer = null;
        PaymentInstruction2 paymentInstruction = null;
        String payPalRequestId = null;
        String prefer = null;
        String payPalAuthAssertion = null;
        Refund response = api.refundPayment(captureId)
                .amount(amount)
                .customId(customId)
                .invoiceId(invoiceId)
                .noteToPayer(noteToPayer)
                .paymentInstruction(paymentInstruction)
                .payPalRequestId(payPalRequestId)
                .prefer(prefer)
                .payPalAuthAssertion(payPalAuthAssertion)
                .execute();
        // TODO: test validations
    }

    /**
     * Show captured payment details
     *
     * Shows details for a captured payment, by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void showDetailsTest() throws ApiException {
        String captureId = null;
        Capture2 response = api.showDetails(captureId)
                .execute();
        // TODO: test validations
    }

}
